name: Run tests
on: [pull_request]
                
jobs:
    tests:
        name: Tests
        runs-on: ubuntu-20.04
        services:
            postgres-test:
                image: 'postgres:14.3-alpine'
                env:
                    POSTGRES_PASSWORD: "mysup3rs3cr3tpassw0rd"
                    POSTGRES_USER: "symfony"
                    POSTGRES_DB: "mybicyclejourney"
                ports:
                    - '5432:5432'
        strategy:
            fail-fast: true
            matrix:
                php-versions: ['8.1']
        steps:
            # —— Setup Github actions 🐙 —————————————————————————————————————————————
            # https://github.com/actions/checkout (official)
            - name: Checkout code
              uses: actions/checkout@v2
            
            # https://github.com/shivammathur/setup-php (community)
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
              env:
                  update: true

            - name: Check PHP Version
              run: php -v
            
            # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: make install

            # —— Symfony 🎵 ——————————————————————————————————————————————————————————
            - name: Check Symfony requirements
              run: vendor/bin/requirements-checker

            - name: Check the Symfony console
              run: |
                  bin/console about

            ## —— Tests ✅ ———————————————————————————————————————————————————————————
            # We use the dev env here
            - name: Load Doctrine fixtures and populate the Elasticsearch indexes
              run: |
                  make init-test-db

            - name: Run functionnal and unit tests
              run: |
                  cp phpunit.xml.dist phpunit.xml
                  make test-all