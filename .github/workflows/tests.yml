name: Tests
on: [ pull_request ]

jobs:
    tests:
        name: All tests
        runs-on: ubuntu-20.04
        services:
            postgres-test:
                image: 'postgres:14.3-alpine'
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: postgres
                ports:
                    - '5432:5432'
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
        strategy:
            fail-fast: true
            matrix:
                php-versions: [ '8.1' ]
        steps:
            # —— Setup Github actions 🐙 —————————————————————————————————————————————
            # https://github.com/actions/checkout (official)
            -   name: Checkout code
                uses: actions/checkout@v2
            
            # https://github.com/shivammathur/setup-php (community)
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    tools: phpunit-bridge
                    extensions: intl, opcache, pdo, pdo_pgsql, pgsql, xsl, xml, dom, mbstring, ctype, iconv
                env:
                    update: true
            
            ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
            -   name: Yarn install
                uses: actions/setup-node@v2
                with:
                    node-version: '18.4'
            -   run: yarn install

            -   name: Yarn build
                run: yarn run encore production
            
            # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: composer install --no-progress --prefer-dist --optimize-autoloader
            
            ## —— Tests ✅ ———————————————————————————————————————————————————————————
            -   name: Setup database
                run: |
                    php bin/console doctrine:cache:clear-metadata --env=test
                    php bin/console doctrine:database:create --if-not-exists --env=test
                    php bin/console doctrine:schema:drop --force --env=test
                    php bin/console doctrine:migration:migrate --no-interaction --env=test
                    php bin/console doctrine:schema:validate --env=test
                env:
                    DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

            -   name: Run application, integration and unit tests
                run: |
                    cp phpunit.xml.dist phpunit.xml
                    php bin/phpunit --testsuite='all' --stop-on-failure
                env:
                    DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8
